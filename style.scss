$colorDark:#333;
$colorLight: orange;
$sizeW: 800px;
$sizeH: 600px;
$thickness: 5px;
$varW: 8;
$varH: 6;

@mixin reset {
    margin: 0;
    padding: 0;
}
@mixin effect-1 {
    opacity: 0;
    animation: effect-1 5s infinite;
    animation-fill-mode: forwards;
    //animation-delay: 1s * $x;
    //animation-delay: 1s * $y;
    //animation-delay: 1s * ($x+$y);
    animation-delay: 1s * random(10);               
}
body {
    background-color: $colorDark;
    @include reset;
}
.carousel {
    width: $sizeW;
    height: $sizeH;
    border: $thickness solid $colorLight;
    margin-top: 50px;
    margin-left: $sizeW/2.3;

    .slide {
        position: absolute;
        //@for $child from 1 through 10 {
           // &:nth-child(#{$child-n})
               // >div {  background-image: url(images/slide-n.jpg);
               // }
        &:nth-child(1) {
            >div {
               background-image: url(images/slide-1.jpg); 
            }
        }
        &:nth-child(2) {
            >div {
               background-image: url(images/slide-2.jpg); 
            }
        }
        &:nth-child(3) {
           >div {
                background-image: url(images/slide-3.jpg); 
            }
        }
        &:nth-child(4) {
            >div {
                 background-image: url(images/slide-4.jpg); 
             }
         }
            width: inherit;
            height: inherit;
            //border: 1px solid red;

            @for $child from 1 through 4 {
                &:nth-child(#{$child})
                    >div{
                        width: $sizeW / $varW;
                        height: $sizeH / $varH;
                        float: left;
                        box-sizing: border-box;
                        //border: 1px solid blue;

                        @for $y from 0 through 5 { 
                            @for $x from 0 through 7 {
                                &:nth-child( #{$y * 8 + $x + 1} ) {
                                    background-position-x: $x* -$sizeW / $varW;
                                    background-position-y: $y*-$sizeH / $varH;

                                    //@include effect-1;
                                transform: translateX(2* -$sizeW)  translateY(2* -$sizeH) rotate(0);
                                animation: effect-2 0.25s * random(5) 1;
                                animation-fill-mode: forwards;
                                animation-delay: 0.1s * random(10) + ($child - 1) * 5s;

                                }
                            }
                        }
            }       }


        
    }   
}
@keyframes effect-1 {
    from {
        opacity:0;
    }
    to {
        opacity:1;
    }
}
@keyframes effect-2 {
    from {
        transform: translateX(2* -$sizeW) translateY(2* -$sizeH) rotate(720deg);
    }
    to {
        transform: translateX(0) translateY(0) rotate(0);
    }
}